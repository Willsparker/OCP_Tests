---
apiVersion: v1
kind: Namespace
metadata:
  name: rhoai-notebook-builder
---
apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: rhoai-notebook-builder
  namespace: rhoai-notebook-builder
spec:
  params:
    - description: 'The name of the image, as it appears in RHOAI. Make sure the image name does not contain any uppercase letters.'
      name: IMAGE_NAME
      type: string
    - description: The location where the built image will be put. Ensure this location is either public or part of your pull-secret.
      name: IMAGE
      type: string
    - default: latest
      description: Tag of the image.
      name: IMAGE_TAG
      type: string
    - name: GIT_REPO
      type: string
    - name: GIT_REVISION
      type: string
    - default: .
      name: PATH_CONTEXT
      type: string
    - default: Containerfile
      name: CONTAINERFILE
      type: string
    - default: ' '
      description: Extra arguments to add to the buildah task. Use this if the Containerfile contains 'ARGS'
      name: BUILD_EXTRA_ARGS
      type: string
  tasks:
    - name: fetch-repository
      params:
        - name: url
          value: $(params.GIT_REPO)
        - name: revision
          value: $(params.GIT_REVISION)
      taskRef:
        kind: ClusterTask
        name: git-clone
      workspaces:
        - name: output
          workspace: persistent-workspace
    - name: build-and-push-image
      params:
        - name: IMAGE
          value: '$(params.IMAGE):$(params.IMAGE_TAG)'
        - name: DOCKERFILE
          value: $(params.CONTAINERFILE)
        - name: CONTEXT
          value: $(params.PATH_CONTEXT)
        - name: BUILD_EXTRA_ARGS
          value: $(params.BUILD_EXTRA_ARGS)
      runAfter:
        - fetch-repository
      taskRef:
        kind: ClusterTask
        name: buildah
      workspaces:
        - name: source
          workspace: persistent-workspace
        - name: dockerconfig
          workspace: dockerconfig
    - name: openshift-client
      params:
        - name: SCRIPT
          value: |
            echo "IMAGE_NAME: $(params.IMAGE_NAME)"
            echo "IMAGE + TAG: $(params.IMAGE):$(params.IMAGE_TAG)"
            oc apply -f - <<EOF
              kind: ImageStream
              apiVersion: image.openshift.io/v1
              metadata:
                annotations:
                  opendatahub.io/notebook-image-creator: image_pipeline
                  opendatahub.io/notebook-image-desc: ''
                  opendatahub.io/notebook-image-name: $(params.IMAGE_NAME)
                  opendatahub.io/notebook-image-url: '$(params.IMAGE):$(params.IMAGE_TAG)'
                  opendatahub.io/recommended-accelerators: '[]'
                name: custom-$(params.IMAGE_NAME)
                namespace: redhat-ods-applications
                labels:
                  app.kubernetes.io/created-by: byon
                  opendatahub.io/dashboard: 'true'
                  opendatahub.io/notebook-image: 'true'
              spec:
                lookupPolicy:
                  local: true
                tags:
                  - name: v2
                    annotations:
                      opendatahub.io/notebook-python-dependencies: '[]'
                      opendatahub.io/notebook-software: '[]'
                      openshift.io/imported-from: '$(params.IMAGE):$(params.IMAGE_TAG)'
                    from:
                      kind: DockerImage
                      name: '$(params.IMAGE):$(params.IMAGE_TAG)'
                    importPolicy:
                      importMode: Legacy
                    referencePolicy:
                      type: Source
            EOF
        - name: VERSION
          value: latest
      runAfter:
        - build-and-push-image
      taskRef:
        kind: ClusterTask
        name: openshift-client
  workspaces:
    - name: persistent-workspace   # This is a small PV to allow workspace carry-over between tasks.
    - name: dockerconfig           # This should have the secret containing your pull-secret, attached to it.
